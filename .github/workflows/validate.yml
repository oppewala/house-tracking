name: Validate pr
on: 
  push:
    paths-ignore: 
    - 'web/**'
    - '.idea/**'
    - '.github/**'
    branches: [ master ]
  pull_request:
    paths-ignore: 
    - 'web/**'
    - '.idea/**'
    - '.github/**'
    types: [opened, synchronize, reopened]

jobs:
  #validate-backend:
    #name: Validate backend
    #runs-on: ubuntu-latest
    #steps:
    #- name: Set up Go 1.13
    #  uses: actions/setup-go@v2

    #- name: Check out code
    #  uses: actions/checkout@v2

    #- name: Get dependencies
    #  run: |
    #    go get -v -t -d ./...
    #    if [ -f Gopkg.toml ]; then
    #        curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
    #        dep ensure
    #    fi

    #- name: Build
    #  run: make validate

  validate-backend:
    name: Validate backend
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - name: Check - imports
      if: always()
      uses: grandcolline/golang-github-actions@v1.1.0
      with:
        run: imports
        token: ${{ secrets.GITHUB_TOKEN }}
    - name: Check - errcheck
      if: always()
      uses: grandcolline/golang-github-actions@v1.1.0
      with:
        run: errcheck
        token: ${{ secrets.GITHUB_TOKEN }}
    - name: Check - lint
      if: always()
      uses: grandcolline/golang-github-actions@v1.1.0
      with:
        run: lint
        token: ${{ secrets.GITHUB_TOKEN }}
    - name: Check - shadow
      if: always()
      uses: grandcolline/golang-github-actions@v1.1.0
      with:
        run: shadow
        token: ${{ secrets.GITHUB_TOKEN }}
    - name: Check - staticcheck
      if: always()
      uses: grandcolline/golang-github-actions@v1.1.0
      with:
        run: staticcheck
        token: ${{ secrets.GITHUB_TOKEN }}
    - name: Check - sec
      if: always()
      uses: grandcolline/golang-github-actions@v1.1.0
      with:
        run: sec
        token: ${{ secrets.GITHUB_TOKEN }}
        flags: "-exclude=G104"
    

  validate-frontend:
    name: Validate frontend
    runs-on: ubuntu-latest
    steps:
    - name: Check out code
      uses: actions/checkout@v2
    - name: eslint
      uses: reviewdog/action-eslint@v1
      with:
        workdir: './web'